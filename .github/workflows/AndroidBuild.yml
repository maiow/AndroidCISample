name: Android CI/CD

# –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –≤ secrets –¥–æ–ª–∂–Ω—ã –ª–µ–∂–∞—Ç—å
# –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ (—Å –Ω–µ–∏—Å—Ç–µ–∫—à–∏–º —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è) —Ç–æ–∫–µ–Ω—ã:
# secrets.MOBILE_TOKEN - fine-grained —Ç–æ–∫–µ–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
# secrets.GPR_TOKEN - classic —Ç–æ–∫–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ —á—Ç–µ–Ω–∏—è maven packages –≤ —Ä–µ–ø–æ —Å –Ω–∏–º–∏, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

permissions:
  actions: write       # Necessary to cancel workflow executions
  contents: read
  packages: read

on:
  push:
    tags:
      - 'build/test/*' # Tag to trigger for dev debug & release APKs for testing
      - 'build/release/*' # Tag to trigger for prod release AAB deployment on Google Play

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    # GitHub Actions can't use "AND" in "on push" for tags AND branches,
    # it uses tags OR branches instead, so we specify branches here
    if: github.ref == 'refs/heads/develop' || 'refs/heads/CI-sample'

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
#        with:
#          token: ${{ secrets.MOBILE_TOKEN }}
#          submodules: true

      - name: Setup Java JDK 17
        uses: actions/setup-java@v4.5.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
#        env:
#          GPR_TOKEN: ${{ secrets.MOBILE_TOKEN }}
#          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#        with:
#          # —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ false, —Ç–∫ –≤—Å–µ –±–∏–ª–¥—ã –Ω–∞ ci –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤—ã—à–µ –≤–µ—Ç–∫–∞—Ö
#          # –∏ —Ç–æ–ª—å–∫–æ –ø–æ —Ç—ç–≥–∞–º build/test –∏ build/release (—Å–º. –≤—ã—à–µ)
#          # —É—Å–ª–æ–≤–∏–µ –≤–∏–¥–∞ ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop' }}
#          # –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è setup-gradle –∑–¥–µ—Å—å –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
#          cache-read-only: false

#      - name: Build dev debug APK for testing
#        if: contains(github.ref, 'refs/tags/build/test')
##        env:
##          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
##          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
##          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
##          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
##        run: ./gradlew assembleDevDebug
#        run: ./gradlew assemble

#      - name: Upload a Debug Testing Build Artifact
#        if: contains(github.ref, 'refs/tags/build/test')
#        uses: actions/upload-artifact@v4.4.3
#        with:
#          name: androidcisample-dev-debug.apk
#          path: app/build/outputs/apk/dev/debug/app-dev-debug.apk
#
#      - name: Build dev release APK for testing
#        if: contains(github.ref, 'refs/tags/build/test')
#        env:
#          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
#        run: ./gradlew assembleDevRelease
#
#      - name: Upload a Release Testing Build Artifact
#        if: contains(github.ref, 'refs/tags/build/test')
#        uses: actions/upload-artifact@v4.4.3
#        with:
#          name: androidcisample-dev-release.apk
#          path: app/build/outputs/apk/dev/release/app-dev-release.apk
#
#      - name: Build prod release AAB
#        if: contains(github.ref, 'refs/tags/build/release')
#        env:
#          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
#          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
#        run: ./gradlew bundleProdRelease
#
#      - name: Upload a Prod Build Artifact
#        if: contains(github.ref, 'refs/tags/build/release')
#        uses: actions/upload-artifact@v4.4.3
#        with:
#          name: androidcisample-prod-release.aab
#          path: app/build/outputs/bundle/prodRelease/app-prod-release.aab
#
##       –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é job, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Å–∫–≤–æ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Å–æ–±—Ä–∞–Ω–Ω—ã–π aab
#      - name: Upload to Google Play
#        if: contains(github.ref, 'refs/tags/build/release')
#        uses: r0adkll/upload-google-play@v1.1.3
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#          packageName: com.mivanovskaya.androidcisample
#          releaseFiles: app/build/outputs/bundle/prodRelease/*.aab
#          track: internal


#      - name: Expose version name
#        uses: michpohl/android-expose-version-name-action@v1.0.0
#        with:
#          path: app/build.gradle.kts - –Ω–µ —É–º–µ–µ—Ç –¥–æ—Å—Ç–∞–≤–∞—Ç—å –∏–∑ kts —Ñ–∞–π–ª–æ–≤!
#          expose-version-name: 'true'
#          expose-version-code: 'true'

#      - name: Get data of the new testing or prod Google Play build
#        run: echo "MESSAGE_TEST=$("$ANDROID_VERSION_CODE, $ANDROID_VERSION_NAME –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")" >> $GITHUB_ENV
#      - name: Test
#        run: echo $MESSAGE_TEST

      - name: Get versionName and versionCode
        id: get_version
        run: |
          versionName=$(grep "versionName" app/build.gradle.kts | sed "s/.*versionName\s*=\s*'\(.*\)'.*/\1/" | tr -d '[:space:]')
          versionCode=$(grep "versionCode" app/build.gradle.kts | sed "s/.*versionCode\s*=\s*\([0-9]*\).*/\1/")
          echo "::set-output name=versionName::$versionName"
          echo "::set-output name=versionCode::$versionCode"

#      - name: Set Message with Version Info
#        id: set_message
##        run: |
##          messageTest="{\"message\": {\"entity_type\": \"discussion\",\"entity_id\": \"15982767\",\"content\": \"üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è dev –≤–µ—Ä—Å–∏—è ${{ steps.get_version.outputs.versionCode }}, ${{ steps.get_version.outputs.versionName }} –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\"}}"
##          echo "::set-output name=message::$messageTest"
#        run: |
#          messageTest='\{"message": \{"entity_type": "discussion","entity_id": "15982767","content": "üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è dev –≤–µ—Ä—Å–∏—è ${{ steps.get_version.outputs.versionCode }}, ${{ steps.get_version.outputs.versionName }} –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"\}\}'
#          echo "::set-output name=messageTest::$messageTest"

#      - name: Display Message
#        # prettier-ignore
#        run: |
#          echo '{\"message\": {\"entity_type\": \"discussion\",\"entity_id\": \"15982767\",\"content\": \"üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è dev –≤–µ—Ä—Å–∏—è ${{ steps.get_version.outputs.versionCode }}, ${{ steps.get_version.outputs.versionName }} –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\"}}'

#      - name: Get data of the new testing or prod Google Play build
#        run: |
#          # - export VERSION=$(grep "versionName" ./app/build.gradle)
#          # variables
#          - export GRADLE_PATH=./app/build.gradle   # path to the gradle file
#          - export GRADLE_FIELD_NAME="versionName"
#          - export GRADLE_FIELD_CODE="versionCode"
#          # logic
#          - export VERSION_NAME_TMP=$(grep $GRADLE_FIELD_NAME $GRADLE_PATH | awk '{print $2}')    # get value versionName"4.21.0"
#          - export VERSION_NAME=$(echo $VERSION_NAME_TMP | sed -e 's/^"//'  -e 's/"$//')  # remove quotes 4.21.0
#          - export VERSION_CODE_TMP=$(grep $GRADLE_FIELD_CODE $GRADLE_PATH | awk '{print $2}')    # get value versionCode"121"
#          - export VERSION_CODE=$(echo $VERSION_CODE_TMP | sed -e 's/^"//'  -e 's/"$//')  # remove quotes 121
#          - export MESSAGE_TEST="{"message": {"entity_type": "discussion","entity_id": "15982767","content": "üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è dev –≤–µ—Ä—Å–∏—è $VERSION_CODE, $VERSION_NAME –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"}}"
#          - export MESSAGE_GP="{"message": {"entity_type": "discussion","entity_id": "15982767","content": "üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –í —Ç—Ä–µ–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google Play –≤—ã–ª–æ–∂–µ–Ω –Ω–æ–≤—ã–π –∞–Ω–¥—Ä–æ–∏–¥ –ø—Ä–æ–¥ —Ä–µ–ª–∏–∑ $VERSION_NAME –≤–µ—Ä—Å–∏–∏ $VERSION_CODE"}}"
#          # result
#          - echo message_test: $MESSAGE_TEST
#          - echo message_gp: $MESSAGE_GP

#        export MESSAGE_TEST="{"message": {"entity_type": "discussion","entity_id": "15982767","content": "üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è dev –≤–µ—Ä—Å–∏—è $ANDROID_VERSION_CODE, $ANDROID_VERSION_NAME –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"}}"
#          - export MESSAGE_GP="{"message": {"entity_type": "discussion","entity_id": "15982767","content": "üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –í —Ç—Ä–µ–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google Play –≤—ã–ª–æ–∂–µ–Ω –Ω–æ–≤—ã–π –∞–Ω–¥—Ä–æ–∏–¥ –ø—Ä–æ–¥ —Ä–µ–ª–∏–∑ $ANDROID_VERSION_NAME –≤–µ—Ä—Å–∏–∏ $ANDROID_VERSION_CODE"}}"
#          - echo message_test: $MESSAGE_TEST
#          - echo message_gp: $MESSAGE_GP

      - name: Inform team in pachca QA tread
        if: contains(github.ref, 'refs/tags/build/release')
        uses: joelwmale/webhook-action@cc1a66f987e1591785273fd6f9d2f7a9d8d7c9cd
        with:
          # WEBHOOK_URL - url –ø–∞—á–∫–∏
          url: ${{ secrets.WEBHOOK_URL }}
          # GP_BOT_AUTH - —Ö—ç–¥–µ—Ä —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞
          headers: ${{ secrets.GP_BOT_AUTH }}
          # prettier-ignore
          body: '{\"message\": {\"entity_type\": \"discussion\",\"entity_id\": \"15982767\",\"content\": \"üöÄ –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–∞—è dev –≤–µ—Ä—Å–∏—è ${{ steps.get_version.outputs.versionCode }}, ${{ steps.get_version.outputs.versionName }} –∞–Ω–¥—Ä–æ–∏–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\"}}'
